#include "shell.h"


/**
 * append_file - append the executing file to
 * each path in the @dir
 * @dir: the array of path
 *
 * Return: an array of appended file path
 */

char *append_file(char *dir, char *arg)
{
	int dir_index, arg_index;
	char *file;

	for (dir_index = 0; dir[dir_index] != '\0'; dir_index++)
		;
	for (arg_index = 0; arg[arg_index]!= '\0'; arg_index++)
		;
	file = malloc((dir_index + arg_index) * sizeof(char));
	if (file == NULL)
	{
		_puts(2, "allocation failed");
		exit(1);
	}
	for (dir_index = 0; dir[dir_index] != '\0'; dir_index++)
		file[dir_index] = dir[dir_index];
	file[dir_index] = '/';
	dir_index += 1;
	for (arg_index = 0; arg[arg_index] != '\0'; arg_index++, dir_index++)
		file[dir_index] = arg[arg_index];
	file[dir_index] = '\0';

	return (file);
}


/**
 * file_checker - check if a file is executable
 * @args: the array containing the command
 *
 * Return: 0 if the file is executable else 1
 */

int file_checker(char *arg)
{

	char **dir;
	char *file;
	int index = 0, status = 1;

	dir = to_tokens(getenv("PATH"), ":");
	while (dir[index] != NULL)
	{
		file = append_file(dir[index], arg);
		_puts(1, dir[index]);
		_puts(1, "\n");
		if ((access(file, F_OK)) == 0)
		{
			free(file);
			status = 0;
			break;
		}
		free(file);
		index++;
	}

	free(dir);
	return (status);
}


